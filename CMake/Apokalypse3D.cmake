MACRO (COMPILE_SHADER TYPE IN DIR_OUT)
	IF (${TYPE} STREQUAL VERTEX)
		SET (SHADER_TYPE v)
	ELSEIF (${TYPE} STREQUAL FRAGMENT)
		SET (SHADER_TYPE f)
	ELSE ()
		MESSAGE (FATAL_ERROR "Unrecognized shader type ${TYPE}")
	ENDIF ()
	GET_FILENAME_COMPONENT (FILEPATH ${IN} DIRECTORY)
	GET_FILENAME_COMPONENT (FILENAME ${IN} NAME_WLE)
	GET_FILENAME_COMPONENT (FILEEXT ${IN} EXT)
	SET (OUT "${DIR_OUT}/${FILENAME}${FILEEXT}.shader")
	LIST (APPEND GENERATED_FILES ${OUT})
	ADD_CUSTOM_COMMAND (
		OUTPUT ${OUT}
		COMMAND shaderc
			-f "${IN}"
			-o "${OUT}"
			-i "${CMAKE_SOURCE_DIR}/ThirdParty/bgfx/bgfx/src"
			--varyingdef "${FILEPATH}/${FILENAME}.var"
			--type ${SHADER_TYPE}
			--platform windows
		DEPENDS ${IN} shaderc
		WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}/DataSource/Shaders"
		VERBATIM
	)
ENDMACRO ()

MACRO (COMPILE_SHADERS_DIR DIR_IN DIR_OUT)
	FILE (GLOB_RECURSE FRAGMENT_SHADERS ${DIR_IN}/*.frag)
	FILE (GLOB_RECURSE VERTEX_SHADERS ${DIR_IN}/*.vert)
	FOREACH (FILENAME ${FRAGMENT_SHADERS})
		COMPILE_SHADER (FRAGMENT ${FILENAME} ${DIR_OUT})
	ENDFOREACH ()
	FOREACH (FILENAME ${VERTEX_SHADERS})
		COMPILE_SHADER (VERTEX ${FILENAME} ${DIR_OUT})
	ENDFOREACH ()
ENDMACRO ()
